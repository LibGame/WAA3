using Assets.Scripts.Client.GameClient;
using Assets.Scripts.GameResources;
using Assets.Scripts.MVC.Battle;
using Assets.Scripts.MVC.Battle.BattleProcess;
using Assets.Scripts.MVC.CastleMVC;
using Assets.Scripts.MVC.CastleMVC.View;
using Assets.Scripts.MVC.CastleSlots;
using Assets.Scripts.MVC.Game;
using Assets.Scripts.MVC.Game.GameProcces;
using Assets.Scripts.MVC.Game.Path;
using Assets.Scripts.MVC.Game.Views;
using Assets.Scripts.MVC.Game.Views.UI;
using Assets.Scripts.MVC.Ground;
using Assets.Scripts.MVC.HeroPanel;
using Assets.Scripts.MVC.TradeMVC;
using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.UI;

public class GameCompositeRoot : CompositeRoot
{
    [SerializeField] private SlotsModel _slotsModel;
    [SerializeField] private CastleCompositeRoot _castleCompositeRoot;
    [SerializeField] private CastleView _castleView;
    [SerializeField] private GameDateView _gameDateView;
    [SerializeField] private GameButtonsView _gameButtonsView;
    [SerializeField] private SubmitTradeResultProcess _submitTradeResultProcess;
    [SerializeField] private TradeView _tradeView;
    [SerializeField] private TradeController _tradeController;
    [SerializeField] private CommonData _commonData;
    [SerializeField] private HeroPanelSelector _heroPanelSelector;
    [SerializeField] private HeroPanelController _heroPanelController;
    [SerializeField] private HeroPanelView _heroPanelView;
    [SerializeField] private ResourcesDataService _resourcesDataService;
    [SerializeField] private BattleTimer _battleTurnTimer;
    [SerializeField] private GameTimer _gameTimer;
    [SerializeField] private LoadScreen _loadScreen;
    [SerializeField] private ProgramState _programState;
    [SerializeField] private GroundController _groundController;
    [SerializeField] private Heroes _heroes;
    [SerializeField] private HeroPicker _heroPicker;
    [SerializeField] private HeroPathMover _heroPathMover;
    [SerializeField] private GameMessageSender _gameMessageSender;
    [SerializeField] private ClientCopositeRoot clientCopositeRoot;
    [SerializeField] private SystemColors _systemColors;
    [SerializeField] private LobbyCompositeRoot _lobbyCompositeRoot;
    [SerializeField] private CellPicker _cellPicker;
    [SerializeField] private GameTurnView _gameTurnView;
    [SerializeField] private GameBattleProcessResponseHandler _gameProcessResponseHandler;
    [SerializeField] private GameLoadScreenView _gameLoadScreenView;
    [SerializeField] private GameLoaderController _gameLoaderController;
    [SerializeField] private GameController _gameController;
    [SerializeField] private TerrainCells _terrainCells;
    [SerializeField] private ResourcesSturctures _resourcesSturctures;
    [SerializeField] private Castles _castles;
    [SerializeField] private MinesStructure _minesStructure;
    [SerializeField] private HeroModelObjects _heroModelObjects;
    [SerializeField] private ModelCreatures _mapCreatures;
    [SerializeField] private GameLoadedData _gameLoadedData;

    private HeroPanelModel _heroPanelModel;
    private PathFinder _pathFinder;
    private PathDrawer _pathDrawer;
    private MoveHeroInfoWithMovePointsProcess _moveHeroInfoWithMovePointsProcess;
    private GameModel _gameModel;
    private TerrainLoader _terrainLoader;
    private ResourcesLoader _resourcesLoader;
    private CastlesLoader _castlesLoader;
    private MinesLoader _minesLoader;
    private HeroModelObjectLoader _heroModelObjectLoader;
    private CreaturesLoader _creaturesLoader;
    private GameAndBattleCommandsSender _gameCommandsSender;
    private GameLoaderModel _gameLoaderModel;
    private GroundView _groundView;
    private GroundModel _groundModel;
    private TradeStartedResultProcess _tradeStartedResultProcess;
    private TradeModel _tradeModel;
    private NewDayStartedInfoProcess _newDayStartedInfoProcess;
    private FlaggedMineResultProcess _flaggedMineResultProcess;
    private FlaggedMineInfoProcess _flaggedMineInfoProcess;

    public GameController GameController => _gameController;
    public GameTimer GameTimer => _gameTimer;
    public GameAndBattleCommandsSender GameAndBattleCommands => _gameCommandsSender;
    public GameModel GameModel => _gameModel;
    public MoveHeroInfoWithMovePointsProcess MoveHeroInfoWithMovePointsProcess => _moveHeroInfoWithMovePointsProcess;
    public TradeStartedResultProcess TradeStartedResultProcess => _tradeStartedResultProcess;

    public override void Composite()
    {
        _groundModel = new GroundModel();
        _gameModel = new GameModel(_groundModel);
        _pathDrawer = new PathDrawer();
        _heroPanelModel = new HeroPanelModel();
        _heroPathMover.Init(2.5f);
        _pathFinder = new PathFinder(_gameModel);
        _tradeModel = new TradeModel(_mapCreatures);
        _newDayStartedInfoProcess = new NewDayStartedInfoProcess(_gameModel);
        _gameCommandsSender = new GameAndBattleCommandsSender(_gameMessageSender, _gameModel);
        _moveHeroInfoWithMovePointsProcess = new MoveHeroInfoWithMovePointsProcess(_gameModel, _heroPathMover, _pathFinder, _pathDrawer);
        _flaggedMineResultProcess = new FlaggedMineResultProcess(_gameCommandsSender, _gameModel, _heroPathMover, _pathFinder, _pathDrawer);
        _submitTradeResultProcess = new SubmitTradeResultProcess(_slotsModel, _castleView,GameModel, _tradeController);
        _tradeStartedResultProcess = new TradeStartedResultProcess(_gameModel,_moveHeroInfoWithMovePointsProcess, _tradeController);
        _gameProcessResponseHandler.Init(_gameTurnView,_newDayStartedInfoProcess,_heroPathMover, GameAndBattleCommands,_gameController,_submitTradeResultProcess,_tradeStartedResultProcess, _resourcesDataService,_gameLoadedData, _gameModel,_moveHeroInfoWithMovePointsProcess, _flaggedMineInfoProcess, _flaggedMineResultProcess ,_loadScreen, _gameTimer, _battleTurnTimer);
        _terrainLoader = new TerrainLoader(_terrainCells, _gameModel);
        _resourcesLoader = new ResourcesLoader(_resourcesSturctures, _gameModel);
        _castlesLoader = new CastlesLoader(_castles, _gameModel);
        _minesLoader = new MinesLoader(_minesStructure, _gameModel);
        _heroModelObjectLoader = new HeroModelObjectLoader(_heroModelObjects, _heroes, _gameModel);
        _creaturesLoader = new CreaturesLoader(_mapCreatures, _gameModel);
        _gameLoaderModel = new GameLoaderModel(_minesLoader, _resourcesDataService,_gameLoadedData, _terrainLoader, _resourcesLoader, 
        _castlesLoader, _heroModelObjectLoader, _creaturesLoader, _gameModel);
        //_gameLoadedData.OnLoadedAllData += _gameController.LoadGameScene;
        _gameLoaderController.Init(_gameLoaderModel);
        _tradeView.Init(_mapCreatures,_tradeModel, _gameCommandsSender);
        _tradeController.Init(_tradeModel);
        _groundController.Init(_groundModel, GameModel);
        _gameTurnView.Init(_gameController,_heroPanelController,_gameModel, _systemColors, _gameCommandsSender);
        _heroPicker.Init(_programState);
        _gameController.Init(_gameLoaderController,_loadScreen,_gameModel,_gameProcessResponseHandler, _cellPicker, _heroPicker, _pathFinder, _pathDrawer, _lobbyCompositeRoot.LobbyModel, _gameCommandsSender, _groundController);
        _heroPanelController.Init(_heroPanelView, _mapCreatures, _commonData, _programState, _heroPanelSelector, _heroPanelModel);
        _heroPanelView.Init(_heroPanelController,_heroPanelModel, _mapCreatures);
        _gameButtonsView.Init(_gameModel);
        _gameModel.Init(_gameTurnView,_gameCommandsSender);
        _gameDateView.Init(_gameModel);

        _gameProcessResponseHandler.OnBattleStarted += _programState.BattleStartHandler;
        _gameProcessResponseHandler.OnGameStarted += _programState.GameStartHandler;
        _gameLoaderModel.OnGameLoaded += _gameLoadScreenView.CloseLoadScreen;
        _gameLoaderModel.OnGameLoaded += _gameModel.InitedData;
        _gameLoaderModel.OnGameLoaded += _gameController.LoadedObjectsData;
        _gameLoaderModel.OnGameLoaded += _programState.GameStartHandler;
        _gameModel.OnUpdatedTurn += _gameTurnView.UpdateTurnView;
        _gameModel.OnEnteredInTurn += _gameTurnView.EnteredInTurn;
        _gameModel.OnExitFromTurn += _gameTurnView.ExitFromTurn;
        _gameModel.OnExitFromTurn += _gameTimer.StopTimer;
        _gameModel.OnStatedTurn += _gameTurnView.CloseOffPanel;
        _gameModel.OnPlayerEnterInTurn += _gameTurnView.DisplayPlayerTurnInfo;
        _gameModel.OnEnterInBattleScene += _gameTurnView.EnterInBattleSceneHandler;
        _gameModel.OnEnterInGameFromBattleScene += _gameTurnView.EnterInGameSceneFromBattleSceneHandler;
        _heroPathMover.OnHeroEndedMove += _gameModel.HeroEndedMove;
    }
}